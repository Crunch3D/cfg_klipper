#####################################################################
#  Macros to debug the printer variable
#  - DUMP_PARAMETERS
#  - DUMP_CONFIG
#  - DUMP_WARNINGS
#  - DUMP_SETTINGS
###########################################

## Use:
##   - DUMP_PARAMETERS
##   - DUMP_PARAMETERS S='gcode_macro _USER_VARIABLE'
[gcode_macro DUMP_PARAMETERS]
description: Debug: Print all entries of the printer object
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh','configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

## Use:
##   - DUMP_CONFIG S='printer'
[gcode_macro DUMP_CONFIG]
description: Debug: Print all entries of the printer config object
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer.configfile.config %}
    {% set show = ['printer'] %}
    {% if name1 is in show %}
      {% set param = "printer.configfile.config['%s'] = %s" % (name1, printer.configfile.config[name1]) %}
      {% set parameters.output = parameters.output +  param + "\n" %}
    {% endif %}
  {% endfor %}
  {action_respond_info(parameters.output)}
  
[gcode_macro DUMP_SETTINGS]
description: Debug: Print all entries of the printer settings object
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer.configfile.settings %}
    {% set show = ['virtual_sdcard'] %}
    {% if name1 is in show %}
      {% set param = "printer.configfile.settings['%s'] = %s" % (name1, printer.configfile.settings[name1]) %}
      {% set parameters.output = parameters.output +  param + "\n" %}
    {% endif %}
  {% endfor %}
  {action_respond_info(parameters.output)}

## Use:
##   - DUMP_WARNINGS
[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
   {% set parameters = ["printer.configfile.warnings:"] %}
   {% for name1 in printer.configfile.warnings %}
       {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (name1.type, name1.section, name1.option, name1.message)) %}
   {% endfor %}
   {action_respond_info(parameters|join("\n"))}


[gcode_macro SEARCH_VARS]
description: Search printer.name use S=""
gcode:
    {% set search = params.S|lower %}
    {% set ns = namespace() %}
    {% for item in printer  %}
        {% if ' ' in item %}
            {% set ns.path = ['printer', "['%s']" % (item), ''] %}
        {% else %}
            {% set ns.path = ['printer.', item, ''] %}   
        {% endif %} 

        {% if search in ns.path|lower %}
            { action_respond_info(ns.path|join) }
        {% endif %} 

        {% if printer[item].items() %}
            {% for childkey, child in printer[item].items() recursive %}
                {% set ns.path = ns.path[:loop.depth|int + 1] %}

                {% if ' ' in childkey %}
                    {% set null = ns.path.append("['%s']" % (childkey)) %}
                {% else %}
                    {% set null = ns.path.append(".%s" % (childkey)) %}
                {% endif %} 

                {% if child is mapping  %}
                    { loop(child.items()) }
                {% else %}
                    {% if search in ns.path|lower %}
                        { action_respond_info("%s : %s" % (ns.path|join, child)) }   
                    {% endif %} 
                {% endif %} 
                
            {% endfor %}
        {% endif %} 
    {% endfor %}



[gcode_macro DUMP_PARAMETERS]
description: DUMP_PARAMETERS
gcode:
    {% set parameters = namespace(output = '') %}
    {% for name1 in printer %}
      {% for name2 in printer[name1] %}
      #{% for name3 in printer[name1][name2]%}
      
        {% set donotwant = ['bed_mesh','configfile'] %}
        {% if name1 is not in donotwant %}
          {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
          {% set parameters.output = parameters.output +  param + "\n" %}
        {% endif %}
        {% else %}
          {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
          {% set parameters.output = parameters.output +  param + "\n" %}
      {% endfor %}
    {% endfor %}
    {action_respond_info(parameters.output)}


[gcode_macro DUMP_CONFIG]
description: DUMP_CONFIG
gcode:
    {% set parameters = namespace(output = '') %}
    {% for name1 in printer.configfile.config %}
      {% set show = ['printer', "bed_mesh VORON-0C-MUELLER"] %}
      {% if name1 is in show %}
        {% set param = "printer.configfile.config['%s'] = %s" % (name1, printer.configfile.config[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
    {% endfor %}
    {action_respond_info(parameters.output)}
  

[gcode_macro DUMP_SETTINGS]
description: DUMP_SETTINGS
gcode:
    {% set parameters = namespace(output = '') %}
    {% for name1 in printer.configfile.settings %}
      {% set show = ['extruder'] %}
      {% if name1 is not in show %}
        {% set param = "printer.configfile.settings['%s'] = %s" % (name1, printer.configfile.settings[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
    {% endfor %}
    {action_respond_info(parameters.output)}


[gcode_macro DUMP_MCU_VER]
description: DUMP_MCU_VER
gcode:
    {% set parameters = namespace(output = 'mcu build version: \n') %}
    {% for name1 in printer %}
      {% for name2 in printer[name1] %}
        {% set show = ['mcu_version'] %}
        {% if name2 is in show %}
          {% set param = "%s: %s" % (name1, printer[name1][name2]) %}
          {% set parameters.output = parameters.output +  param + "\n" %}
        {% endif %}
      {% endfor %}
    {% endfor %}
    {action_respond_info(parameters.output)}


[gcode_macro DUMP_SATS]
description: DUMP_SATS
gcode:
    {% set cpu_t = printer.system_stats.cputime %}
    {% set cpu_h = (cpu_t / 3600)|int %}
    {% set cpu_m = ((cpu_t / 60) % 60)|int %}
    {% set cpu_s = (cpu_t % 60)|int %}
    {% set sysload = printer.system_stats.sysload|float * 100.0 %}
    {% set mem_val = printer.system_stats.memavail|float / 8388608.0 %}
    {action_respond_info("klipper process statistic:
                        Head stalls: %d
                        CPU Time: %d:%02d:%02d
                        Sysload: %.2f percent
                        Mem Val: %.3f MB" % (printer.toolhead.stalls, cpu_h, cpu_m ,cpu_s, sysload, mem_val))}


##   TMC Debugging
[gcode_macro M122]
description: TMC Debugging
gcode:
    DUMP_TMC STEPPER=stepper_x
    DUMP_TMC STEPPER=stepper_y
    DUMP_TMC STEPPER=stepper_z
    DUMP_TMC STEPPER=extruder


